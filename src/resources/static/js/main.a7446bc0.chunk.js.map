{"version":3,"sources":["utils/fetch-utils.ts","components/message/index.tsx","contexts/user-context.tsx","pages/login/index.tsx","contexts/books-context.tsx","pages/home/reserve/index.tsx","pages/home/index.tsx","pages/signup/index.tsx","pages/profile/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["getToken","JSON","parse","window","localStorage","getItem","token","error","fetch_utils","post","url","data","fetch","method","headers","Content-Type","Authorization","concat","body","stringify","then","res","status","Promise","resolve","code","json","get","catch","err","console","log","getUser","user","invalidToken","_ref","variantIcon","success","CheckCircle","warning","Warning","Error","info","Info","withStyles","theme","message","display","alignItems","icon","fontSize","opacity","marginRight","spacing","unit","close","padding","backgroundColor","colors","green","palette","dark","primary","amber","props","variant","onExited","classes","_React$useState","React","_React$useState2","Object","slicedToArray","open","setOpen","Icon","react","index_es","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","className","aria-describedby","id","action","key","aria-label","color","onClick","icons_index_es","UserContext","fetchUtils","Provider","redirect","response","_this","history","push","handleLogin","username","password","asyncToGenerator","regenerator_default","a","mark","_callee","result","wrap","_context","prev","next","sent","setItem","t0","stop","_x","apply","this","arguments","handleReserve","_ref2","book_id","start_date","end_date","_ref3","_callee2","_ref4","_context2","setState","messageProps","_x2","handleMyReserve","user_id","_ref5","_callee3","_ref6","_context3","reservations","_x3","handleSignup","name","_ref7","_callee4","_ref8","_context4","_x4","state","onLogin","onReserve","onMyReservations","onSignup","_this2","value","children","components_message","assign","undefined","UserContextProvider","withRouter","root","height","paper","setName","_React$useState3","_React$useState4","setPassword","container","direction","justify","required","label","placeholder","onChange","e","target","margin","fullWidth","type","md5","location","href","host","react_router_dom","to","BookContext","handleBooks","books","total","page","pageSize","onBooks","BookContextProvider","content","text","marginBottom","book","onReserved","busy","setBusy","_React$useState5","Date","_React$useState6","startDate","setStartDate","_React$useState7","_React$useState8","startTime","setStartTime","_React$useState9","moment","days","toDate","_React$useState10","endDate","setEndDate","_React$useState11","_React$useState12","endTime","setEndTime","_React$useState13","_React$useState14","setError","title","aria-labelledby","item","xs","dist","date","min","max","time","disabled","done","getTime","_id","topbar","profile","grey","_React$useContext","position","map","b","description","count","reserved","reserve","pwd","setPwd","repwd","setRepwd","helperText","_React$useContext2","r","find","App","react_router","path","component","Home","exact","Login","Signup","Profile","Boolean","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7446bc0.chunk.js","sourcesContent":["const getToken = () => {\r\n  try {\r\n    const obj = JSON.parse(window.localStorage.getItem('token'));\r\n    return obj.token;\r\n  } catch (error) {\r\n    return '';\r\n  }\r\n}\r\n\r\nconst post = (url: string, data: object) => fetch(url, {\r\n  method: 'POST',\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": `JWT ${getToken()}`\r\n  },\r\n  body: JSON.stringify(data)\r\n}).then(res => {\r\n  if (res.status === 401) {\r\n    return Promise.resolve({ code: 'invalid token' });\r\n  } else {\r\n    return res.json();\r\n  }\r\n});\r\n\r\nconst get = (url: string) => fetch(url, {\r\n  method: 'GET',\r\n  headers: {\r\n    // \"Content-Type\": \"application/json\",\r\n    \"Authorization\": `JWT ${getToken()}`\r\n  },\r\n})\r\n.then(res => {\r\n  if (res.status === 401) {\r\n    return Promise.resolve({ code: 'invalid token' });\r\n  } else {\r\n    return res.json();\r\n  }\r\n})\r\n.catch(err => console.log(err))\r\n\r\nconst getUser = () => {\r\n  try {\r\n    const { user } = JSON.parse(window.localStorage.getItem('token'));\r\n    return user;\r\n  } catch (error) {\r\n    return {};\r\n  }\r\n}\r\n\r\nconst invalidToken = ({ code }: any) => code === 'invalid token';\r\n\r\nexport default { post, get, getUser, invalidToken };","import * as React from 'react';\r\nimport { Snackbar, withStyles, SnackbarContent, Icon, colors, IconButton } from '@material-ui/core';\r\nimport { CheckCircle, Warning, Error, Info, Close } from \"@material-ui/icons\";\r\n\r\ntype MessageProps = {\r\n  variant: 'success' | 'warning' | 'error' | 'info'\r\n  message: React.ReactNode\r\n  onExited: () => void\r\n} & {\r\n  classes?: {\r\n    message: string\r\n    icon: string\r\n    variants: {[key: string]: string},\r\n    close: string\r\n  }\r\n}\r\n\r\nconst variantIcon = {\r\n  success: CheckCircle,\r\n  warning: Warning,\r\n  error: Error,\r\n  info: Info,\r\n};\r\n\r\nconst Message = (props: MessageProps) => {\r\n  const { variant, message, onExited, classes } = props;\r\n  const [ open, setOpen ] = React.useState<boolean>(false);\r\n  const Icon = variantIcon[variant];\r\n  React.useEffect(() => {\r\n    setOpen(true);\r\n  }, [message]);\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center'\r\n      }}\r\n      open={open}\r\n      autoHideDuration={3000}\r\n      onClose={() => setOpen(false)}\r\n      onExited={onExited}\r\n    >\r\n      <SnackbarContent\r\n        className={classes[variant]}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n          <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={classes.icon} />\r\n            {message}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            className={classes.close}\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        ]}\r\n      />\r\n    </Snackbar>\r\n  )\r\n}\r\n\r\nexport default withStyles(theme => ({\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  close: {\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  success: {\r\n    backgroundColor: colors.green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark\r\n  },\r\n  warning: {\r\n    backgroundColor: colors.amber[700]\r\n  },\r\n}))(Message);","import * as React from 'react';\r\nimport fetchUtils from '../utils/fetch-utils';\r\nimport Message from '../components/message';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\n\r\nexport type ID = { _id: string };\r\nexport type User = {\r\n  name: string\r\n  password: string\r\n} & ID\r\nexport type Reservation = {\r\n  user_id,\r\n  book_id,\r\n  start_date,\r\n  end_date,\r\n} & ID\r\ntype ReserveParam = {\r\n  book_id: string\r\n  start_date: number,\r\n  end_date: number,\r\n}\r\ntype ContextType = {\r\n  reservations: Reservation[]\r\n  onLogin: (name: string, password: string) => PromiseLike<boolean>\r\n  onReserve: (param: ReserveParam) => PromiseLike<boolean>\r\n  onMyReservations: (user_id: string) => PromiseLike<boolean>\r\n  onSignup: (name: string, pwd: string) => PromiseLike<boolean>\r\n} & {\r\n  messageProps?: MessageProps\r\n}\r\ntype MessageProps = {\r\n  variant: 'success' | 'warning' | 'error' | 'info'\r\n  message: React.ReactNode\r\n}\r\nconst success = 'success';\r\n\r\nconst UserContext = React.createContext<Partial<ContextType>>({});\r\n\r\nconst { post } = fetchUtils;\r\nclass Provider extends React.Component<RouteComponentProps<any> & any, ContextType> {\r\n  redirect = (response: any) => {\r\n    fetchUtils.invalidToken(response) && this.props.history.push('/login');\r\n  }\r\n\r\n  handleLogin = (username: string, password: string) => new Promise<boolean>(async res => {\r\n    try {\r\n      const result = await post(\"/api/user/login\", { username, password });\r\n      this.redirect(result);\r\n      window.localStorage.setItem('token', JSON.stringify(result));\r\n      res(true);\r\n    } catch (error) {\r\n      res(false);\r\n    }\r\n  })\r\n\r\n  handleReserve = ({ book_id, start_date, end_date }: ReserveParam) => new Promise<boolean>(async res => {\r\n    try {\r\n      const { code, message } = await post(`/api/books/${book_id}/reserve`, { start_date, end_date });\r\n      this.redirect({ code });\r\n      res(code === success);\r\n      if (code !== success) {\r\n        this.setState({\r\n          messageProps: {\r\n            variant: 'error',\r\n            message,\r\n          }\r\n        })\r\n      } else {\r\n        this.setState({\r\n          messageProps: {\r\n            variant: 'success',\r\n            message,\r\n          }\r\n        })\r\n      }\r\n    } catch (error) {\r\n      res(false);\r\n    }\r\n  })\r\n\r\n  handleMyReserve = (user_id: string) => new Promise<boolean>(async res => {\r\n    try {\r\n      const { code, data } = await post(`api/user/${user_id}/reservations`, {});\r\n      this.redirect({ code });\r\n      if (code === success) {\r\n        this.setState({ reservations: data });\r\n        res(true);\r\n      } else {\r\n        res(false);\r\n      }\r\n    } catch (error) {\r\n      res(false);\r\n    }\r\n  })\r\n\r\n  handleSignup = (name: string, password: string) => new Promise<boolean>(async res => {\r\n    try {\r\n      const { code, message } = await post('api/user', { name, password });\r\n      this.redirect({ code });\r\n      res(code === success);\r\n      this.setState({\r\n        messageProps: {\r\n          variant: code as any,\r\n          message\r\n        }\r\n      })\r\n    } catch (error) {\r\n      res(false);\r\n    }\r\n  })\r\n\r\n  state: ContextType = {\r\n    reservations: [],\r\n    onLogin: this.handleLogin,\r\n    onReserve: this.handleReserve,\r\n    onMyReservations: this.handleMyReserve,\r\n    onSignup: this.handleSignup,\r\n  }\r\n\r\n  render() {\r\n    const { messageProps } = this.state;\r\n    return (\r\n      <UserContext.Provider value={this.state}>\r\n        {this.props.children}\r\n        {messageProps && <Message {...messageProps} onExited={() => this.setState({ messageProps: undefined })} />}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserContext;\r\nexport const UserContextProvider = withRouter(Provider);\r\n","import * as React from 'react';\r\nimport { TextField, Grid, Paper, Button, Link, withStyles } from \"@material-ui/core\";\r\nimport { Link as RouterLink, RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport md5 from 'md5';\r\nimport UserContext from '../../contexts/user-context';\r\n\r\ntype Props = {\r\n  classes: {\r\n    root: string\r\n    paper: string\r\n  }\r\n} & RouteComponentProps<any>\r\nconst Login = (props: Props) => {\r\n  const { classes, history } = props;\r\n  const [ name, setName ] = React.useState<string>('');\r\n  const [ password, setPassword ] = React.useState<string>('');\r\n  const {\r\n    onLogin,\r\n  } = React.useContext(UserContext);\r\n  return (\r\n    <Grid className={classes.root}\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <form>\r\n        <Paper className={classes.paper}>\r\n          <TextField\r\n            required\r\n            id=\"username\"\r\n            label=\"Name\"\r\n            placeholder=\"Input user name\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n            margin=\"normal\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            required\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            placeholder=\"Input password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            margin=\"normal\"\r\n            fullWidth\r\n          />\r\n          <Grid container justify=\"space-around\" alignItems=\"center\">\r\n            <Button variant=\"contained\" \r\n              color=\"primary\"\r\n              onClick={async () => {\r\n                const succeed = await onLogin(name, md5(password));\r\n                if (succeed) {\r\n                  // history.push('/');\r\n                  window.location.href = `//${window.location.host}`;\r\n                }\r\n              }}\r\n            >\r\n              Sign in\r\n            </Button>\r\n            {/* <Link>\r\n              <RouterLink to=\"/signup\">Sign up</RouterLink>\r\n            </Link> */}\r\n            {/* <Link component={MyLink}>Sign Up</Link> */}\r\n            <RouterLink to=\"/signup\">\r\n              <Button color=\"inherit\">Sign Up</Button>\r\n            </RouterLink>\r\n          </Grid>\r\n        </Paper>\r\n      </form>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default withStyles(theme => ({\r\n  root: {\r\n    height: '100vh'\r\n  },\r\n  paper: {\r\n    padding: 10\r\n  }\r\n}))(withRouter(Login));","import * as React from 'react';\r\nimport fetchUtils from '../utils/fetch-utils';\r\nimport { ID } from './user-context';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\n\r\nexport type PageData<T> = {\r\n  total: number\r\n  page: number\r\n  pageSize: number\r\n  result: T[]\r\n}\r\nexport type Book = {\r\n  title: string\r\n  description: string\r\n  count: number,\r\n  reserved: number,\r\n} & ID\r\ntype ContextType = {\r\n  books: PageData<Book>,\r\n  onBooks: () => Promise<boolean>,\r\n}\r\n\r\nconst BookContext = React.createContext<Partial<ContextType>>({});\r\n\r\nconst { post, get } = fetchUtils;\r\n\r\nclass Provider extends React.Component<RouteComponentProps<any> & any, ContextType> {\r\n  componentWillMount() {\r\n    this.setState({\r\n      books: {\r\n        total: 0,\r\n        page: 1,\r\n        pageSize: 10,\r\n        result: []\r\n      },\r\n      onBooks: this.handleBooks,\r\n    })\r\n  }\r\n\r\n  redirect = (response: any) => {\r\n    fetchUtils.invalidToken(response) && this.props.history.push('/login');\r\n  }\r\n\r\n  handleBooks = () => new Promise<boolean>(async res => {\r\n    try {\r\n      const books = await get(\"/api/books\");\r\n      this.redirect(books);\r\n      this.setState({ books });\r\n      res(true);\r\n    } catch (error) {\r\n      res(false);\r\n    }\r\n  })\r\n\r\n  render() {\r\n    return (\r\n      <BookContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </BookContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BookContext;\r\nexport const BookContextProvider = withRouter(Provider);","import * as React from 'react';\r\nimport { withStyles, Grid, Dialog, DialogTitle, DialogContentText, DialogContent, DialogActions, Button } from '@material-ui/core';\r\nimport { Book } from '../../../contexts/books-context';\r\nimport UserContext from '../../../contexts/user-context';\r\nimport {DateFormatInput, TimeFormatInput} from 'material-ui-next-pickers'\r\nimport * as moment from 'moment';\r\n\r\ntype Props = {\r\n  book: Book,\r\n  onReserved: (succeed: boolean) => void,\r\n  classes?: {\r\n    root: string,\r\n    content: string,\r\n    text: string,\r\n  }\r\n}\r\nconst Reserve = (props: Props) => {\r\n  const {\r\n    onReserve\r\n  } = React.useContext(UserContext);\r\n  const { book, onReserved, classes } = props;\r\n  const [ open, setOpen ] = React.useState<boolean>(false);\r\n  const [ busy, setBusy ] = React.useState<boolean>(false);\r\n  const [ startDate, setStartDate ] = React.useState<Date>(new Date());\r\n  const [ startTime, setStartTime ] = React.useState<Date>(new Date());\r\n  const [ endDate, setEndDate ] = React.useState<Date>(moment.default().days(7).toDate());\r\n  const [ endTime, setEndTime ] = React.useState<Date>(new Date());\r\n  const [ error, setError ] = React.useState<string>();\r\n  return (\r\n    <React.Fragment>\r\n      <Button color=\"primary\" onClick={() => setOpen(true)}>Reserve</Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n          setError(undefined);\r\n        }}\r\n        title={`Reserve ${book.title}`}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        className={classes.root}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Reserve {book.title}</DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          <DialogContentText className={classes.text}>\r\n            Enjoy the reading.\r\n          </DialogContentText>\r\n          {error && <DialogContentText color=\"secondary\" className={classes.text}>\r\n            {error}\r\n          </DialogContentText>}\r\n          <Grid container direction=\"row\" spacing={16}>\r\n            <Grid item xs={6}>\r\n              <DateFormatInput label=\"Pick start date\" name='date-input' value={startDate} onChange={date => setStartDate(date)} min={new Date()} max={endDate} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TimeFormatInput label=\"Pick start time\" name='time-input' value={startTime} onChange={time => setStartTime(time)} />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container direction=\"row\" spacing={16}>\r\n            <Grid item xs={6}>\r\n              <DateFormatInput label=\"Pick end date\" name='date-input' value={endDate} onChange={date => setEndDate(date)} min={startDate} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TimeFormatInput label=\"Pick end time\" name='time-input' value={endTime} onChange={time => setEndTime(time)} />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" \r\n            onClick={() => {\r\n              setOpen(false);\r\n              setError(undefined);\r\n            }}>\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"primary\"\r\n            disabled={busy}\r\n            onClick={async () => {\r\n              setBusy(true);\r\n              const start_date = startDate.getTime();\r\n              const end_date = endDate.getTime();\r\n              if (end_date - start_date < 60*60*1000) {\r\n                setError('Duration must over than 60 minutes.');\r\n                setBusy(false);\r\n              } else {\r\n                const done = await onReserve({ book_id: book._id, start_date, end_date });\r\n                onReserved(done);\r\n                setOpen(false);\r\n                setBusy(false);\r\n              }\r\n            }}\r\n          >\r\n            Reserve\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withStyles(theme => ({\r\n  root: {\r\n  },\r\n  content: {\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n}))(Reserve);","import * as React from 'react';\r\nimport { withStyles, Table, TableBody, TableCell, TableHead, TableRow, AppBar, colors, Typography, Button, Grid, Link } from '@material-ui/core';\r\nimport { RouteComponentProps, withRouter, Link as RouterLink } from \"react-router-dom\";\r\nimport BookContext from './../../contexts/books-context';\r\nimport Reserve from './reserve';\r\nimport fetchUtils from '../../utils/fetch-utils';\r\n\r\ntype Props = {\r\n  classes: {\r\n    root: string\r\n    topbar: string\r\n    profile: string\r\n  }\r\n} & RouteComponentProps<any>\r\n\r\nconst Home = (props: Props) => {\r\n  const { classes, history } = props;\r\n  const {\r\n    books,\r\n    onBooks\r\n  } = React.useContext(BookContext);\r\n  React.useEffect(() => {\r\n    if (books.total === 0) onBooks();\r\n  });\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.topbar}>\r\n        <Grid container justify=\"space-between\" alignItems=\"center\">\r\n          <Typography variant=\"h6\" color=\"inherit\">Library</Typography>\r\n          <span>\r\n            <RouterLink to=\"/profile\">\r\n              <Button className={classes.profile}\r\n              >\r\n                My Reservations\r\n              </Button>\r\n            </RouterLink>\r\n            <Button color=\"inherit\"\r\n              onClick={() => {\r\n                window.localStorage.setItem('token', undefined);\r\n                history.push('/login');\r\n              }}\r\n            >\r\n              Logout {fetchUtils.getUser().name}\r\n            </Button>\r\n          </span>\r\n        </Grid>\r\n      </AppBar>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Title</TableCell>\r\n            <TableCell>Description</TableCell>\r\n            <TableCell>Count</TableCell>\r\n            <TableCell></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {(books.result || []).map(b => (\r\n            <TableRow key={b._id}>\r\n              <TableCell>{b.title}</TableCell>\r\n              <TableCell>{b.description}</TableCell>\r\n              <TableCell>Total: {b.count}, {b.count - b.reserved} remains</TableCell>\r\n              <TableCell>\r\n                <Reserve book={b} \r\n                  onReserved={done => {\r\n                    if (done) {\r\n                      onBooks();\r\n                    }\r\n                  }} \r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(theme => ({\r\n  root: {},\r\n  topbar: {\r\n    padding: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit,\r\n  },\r\n  profile: {\r\n    color: theme.palette.grey[50],\r\n  }\r\n}))(withRouter(Home));","import * as React from 'react';\r\nimport { Link as RouterLink, RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { withStyles, Grid, Paper, TextField, Button } from '@material-ui/core';\r\nimport UserContext from '../../contexts/user-context';\r\nimport md5 from 'md5';\r\n\r\ntype Props = {\r\n  classes: {[key: string]: string}\r\n} & RouteComponentProps<any>\r\nconst Signup = (props: Props) => {\r\n  const { classes } = props;\r\n  const {\r\n    onSignup\r\n  } = React.useContext(UserContext);\r\n  const [ name, setName ] = React.useState<string>();\r\n  const [ pwd, setPwd ] = React.useState<string>();\r\n  const [ repwd, setRepwd ] = React.useState<string>();\r\n  return (\r\n    <Grid\r\n      className={classes.root}\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Paper className={classes.paper}>\r\n        <h2>Sign up</h2>\r\n        <TextField\r\n          required\r\n          label=\"Name\"\r\n          id=\"username\"\r\n          placeholder=\"Input name\"\r\n          value={name}\r\n          margin=\"normal\"\r\n          fullWidth\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          id=\"password\"\r\n          placeholder=\"Input password\"\r\n          value={pwd}\r\n          margin=\"normal\"\r\n          fullWidth\r\n          onChange={e => setPwd(e.target.value)}\r\n        />\r\n        <TextField\r\n          required\r\n          type=\"password\"\r\n          label=\"Re-Password\"\r\n          id=\"re-password\"\r\n          placeholder=\"Input password again\"\r\n          value={repwd}\r\n          margin=\"normal\"\r\n          fullWidth\r\n          error={repwd !== pwd}\r\n          helperText={repwd !== pwd ? 'Passwords are not match.' : undefined}\r\n          onChange={e => setRepwd(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" \r\n          color=\"primary\"\r\n          onClick={async () => {\r\n            if (pwd === repwd) {\r\n              const succeed = await onSignup(name, md5(pwd));\r\n              if (succeed) {\r\n                props.history.push('/login');\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default withStyles(theme => ({\r\n  root: {\r\n    height: '100vh'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit\r\n  }\r\n}))(withRouter(Signup));\r\n","import * as React from 'react';\r\nimport { Table, TableHead, TableRow, TableBody, TableCell, withStyles } from '@material-ui/core';\r\nimport UserContext from '../../contexts/user-context';\r\nimport BookContext, { Book } from '../../contexts/books-context';\r\nimport fetchUtils from '../../utils/fetch-utils';\r\n\r\ntype Props = {\r\n  classes: {[key: string]: string}\r\n}\r\nconst Profile = (props: Props) => {\r\n  const { classes } = props;\r\n  const {\r\n    onMyReservations,\r\n    reservations,\r\n  } = React.useContext(UserContext);\r\n  const {\r\n    books,\r\n    onBooks,\r\n  } = React.useContext(BookContext);\r\n  React.useEffect(() => {\r\n    onMyReservations(fetchUtils.getUser()._id);\r\n    onBooks();\r\n  }, [1]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Title</TableCell>\r\n            <TableCell>Description</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {reservations.map(r => {\r\n            const book: Partial<Book> = books.result.find(b => r.book_id === b._id) || {};\r\n            return (\r\n              <TableRow key={r._id}>\r\n                <TableCell>{book.title}</TableCell>\r\n                <TableCell>{book.description}</TableCell>\r\n              </TableRow>\r\n            )\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(theme => ({\r\n  root: {}\r\n}))(Profile);\r\n","import * as React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport Login from \"./pages/login\";\nimport Home from './pages/home';\nimport Signup from './pages/signup';\nimport Profile from './pages/profile';\nimport { UserContextProvider } from './contexts/user-context';\nimport { BookContextProvider } from './contexts/books-context';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/profile\" component={Profile} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default () => (\n  <BrowserRouter>\n    <UserContextProvider>\n      <BookContextProvider>\n        <App />\n      </BookContextProvider>\n    </UserContextProvider>\n  </BrowserRouter>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}